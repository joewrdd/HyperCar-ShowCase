<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Dashboard - HyperCar Showcase</title>
    <style>
      /* General body styling */
      body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        background-color: #121212;
        color: #ffffff;
        margin: 0;
        padding: 0;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
      }

      /* Header styling */
      header {
        background: linear-gradient(135deg, #cc0000 0%, #800000 100%);
        padding: 2.7rem 2rem;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        z-index: 10;
        box-shadow: 0 2px 10px rgba(204, 0, 0, 0.3);
        display: flex;
        align-items: center;
        justify-content: space-between;
      }

      /* Back to Home button */
      .back-home {
        position: absolute;
        right: 50px;
        top: 50%;
        transform: translateY(-50%);
        padding: 12px 24px;
        background: #000000;
        color: white;
        border: 2px solid #cc0000;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 1px;
        font-size: 14px;
      }

      .back-home:hover {
        background: #cc0000;
        transform: translateY(-50%) scale(1.05);
        box-shadow: 0 4px 15px rgba(204, 0, 0, 0.3);
      }

      /* Logo inside the header */
      header img {
        height: 100px;
        width: auto;
        position: absolute;
        top: 65%;
        transform: translateY(-50%);
        left: 20px;
        transition: transform 0.3s ease;
      }

      header img:hover {
        transform: scale(1.05);
      }

      /* Main content area */
      main {
        margin-top: 130px;
        padding: 20px;
        flex: 1;
        max-width: 1400px;
        margin-left: auto;
        margin-right: auto;
        width: 95%;
      }

      /* Filter section */
      .filters {
        background: #1e1e1e;
        padding: 20px;
        border-radius: 12px;
        margin-bottom: 30px;
        display: flex;
        gap: 15px;
        flex-wrap: wrap;
        align-items: center;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.4);
      }

      /* Filter inputs */
      .filters select,
      .filters input {
        padding: 10px 15px;
        border: 1px solid #333;
        border-radius: 8px;
        background: #2d2d2d;
        color: #ffffff;
        font-size: 14px;
        transition: all 0.3s ease;
        min-width: 150px;
      }

      .filters select:focus,
      .filters input:focus {
        outline: none;
        border-color: #cc0000;
        box-shadow: 0 0 0 2px rgba(204, 0, 0, 0.1);
      }

      /* Manufacturer and Service Center buttons */
      .manufacturer-btn button,
      .servicecenter-btn button {
        padding: 10px 20px;
        background: #cc0000;
        border: none;
        border-radius: 8px;
        color: white;
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 500;
        text-transform: uppercase;
        font-size: 14px;
        letter-spacing: 0.5px;
      }

      .manufacturer-btn button:hover,
      .servicecenter-btn button:hover {
        background: #990000;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(204, 0, 0, 0.2);
      }

      /* Car gallery grid */
      .car-gallery {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 25px;
        padding: 10px;
      }

      /* Individual car card */
      .car-card {
        background: #1e1e1e;
        border-radius: 12px;
        padding: 15px;
        transition: all 0.3s ease;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.5);
        opacity: 0;
        animation: fadeInUp 0.5s ease forwards;
        display: flex;
        flex-direction: column;
      }

      .car-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 25px rgba(204, 0, 0, 0.2);
      }

      /* Car image styling */
      .car-card img {
        width: 100%;
        height: 250px;
        object-fit: contain;
        object-position: center;
        border-radius: 8px;
        margin-bottom: 15px;
        transition: transform 0.3s ease;
        background-color: #000000;
      }

      .car-card img:hover {
        transform: scale(1.03);
      }

      .car-card h3 {
        color: #ffffff;
        margin: 10px 0;
        font-size: 1.4rem;
      }

      .car-card p {
        margin: 8px 0;
        color: #b3b3b3;
        font-size: 0.95rem;
        line-height: 1.4;
      }

      .car-card strong {
        color: #ffffff;
      }

      /* Footer styling */
      footer {
        background: #1e1e1e;
        color: white;
        padding: 20px;
        text-align: center;
        margin-top: 50px;
        font-size: 0.9rem;
        border-top: 1px solid #333;
      }

      /* No cars message */
      .no-cars {
        color: #b3b3b3;
        text-align: center;
        font-size: 1.2rem;
        padding: 40px;
      }

      /* Responsive design */
      @media (max-width: 768px) {
        .filters {
          flex-direction: column;
          align-items: stretch;
        }

        .filters select,
        .filters input,
        .manufacturer-btn button,
        .servicecenter-btn button {
          width: 100%;
        }

        main {
          padding: 10px;
        }

        .car-gallery {
          gap: 15px;
        }
      }

      /* Animations */
      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      /* Card animations */
      .car-gallery a {
        text-decoration: none;
      }

      .car-gallery a:nth-child(n) .car-card {
        animation-delay: calc(0.1s * var(--i, 1));
      }
    </style>
  </head>

  <body>
    <header>
      <img src="/images/logo.png" alt="HyperCar Showcase Logo" />
      <a href="/home" class="back-home">Back to Home</a>
    </header>

    <main>
      <div class="filters">
        <a href="/manufacturers" class="manufacturer-btn">
          <button>View Manufacturer Details</button>
        </a>
        <a href="/service_centers" class="servicecenter-btn">
          <button>View Service Center Details</button>
        </a>
        <select id="brandFilter" onchange="applyFilters()">
          <option value="All">All Brands</option>
          <% if (cars && cars.length > 0) { const brands = [...new
          Set(cars.map(car => car.brand))]; brands.forEach(brand => { %>
          <option value="<%= brand %>"><%= brand %></option>
          <% }); } %>
        </select>
        <input
          type="number"
          id="minSpeedFilter"
          placeholder="Min Speed (mph)"
          oninput="applyFilters()"
        />
        <input
          type="number"
          id="maxSpeedFilter"
          placeholder="Max Speed (mph)"
          oninput="applyFilters()"
        />
      </div>

      <section class="car-gallery">
        <% if (cars && cars.length > 0) { cars.forEach(car => { const carReviews
        = reviews.filter(review => review.car_id === car.car_id); const
        totalReviews = carReviews.length; const avgRating = totalReviews > 0 ?
        (carReviews.reduce((sum, review) => sum + parseInt(review.rating), 0) /
        totalReviews).toFixed(2) : 'No ratings'; const displayRating =
        totalReviews > 0 ? avgRating + ' / 5' : 'No ratings'; %>
        <a
          class="car-element"
          href="/car/<%= car.car_id %>"
          data-brand="<%= car.brand %>"
          data-speed="<%= car.top_speed %>"
          data-price="<%= car.price %>"
        >
          <div class="car-card">
            <img
              src="<%= car.imagePath %>"
              alt="<%= car.model %>"
              onerror="this.src='/images/default.png'"
            />
            <h3><%= car.model %></h3>
            <p><strong>Brand:</strong> <%= car.brand %></p>
            <p><strong>Price:</strong> <%= car.price %></p>
            <p><strong>Top Speed:</strong> <%= car.top_speed %> mph</p>
            <p><strong>Horsepower:</strong> <%= car.horsepower %> hp</p>
            <p><strong>Rating:</strong> <%= displayRating %></p>
          </div>
        </a>
        <% }); } else { %>
        <p class="no-cars">No cars available at the moment.</p>
        <% } %>
      </section>
    </main>

    <footer>
      <p>&copy; 2024 HyperCar Showcase. All Rights Reserved</p>
    </footer>

    <script>
      let debounceTimer;

      function applyFilters() {
        clearTimeout(debounceTimer);
        debounceTimer = setTimeout(() => {
          const brand = document.getElementById("brandFilter").value;
          const minSpeed = document.getElementById("minSpeedFilter").value;
          const maxSpeed = document.getElementById("maxSpeedFilter").value;

          const cards = document.querySelectorAll(".car-element");
          cards.forEach((card) => {
            const carBrand = card.getAttribute("data-brand");
            const carSpeed = parseInt(card.getAttribute("data-speed"));
            const carPrice = parseFloat(card.getAttribute("data-price"));

            if (
              (brand === "All" || carBrand === brand) &&
              (minSpeed === "" || carSpeed >= parseInt(minSpeed)) &&
              (maxSpeed === "" || carSpeed <= parseFloat(maxSpeed))
            ) {
              card.style.display = "block";
            } else {
              card.style.display = "none";
            }
          });
        }, 300);
      }

      // Animate cards on scroll
      const observerOptions = {
        threshold: 0.1,
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.style.animationPlayState = "running";
          }
        });
      }, observerOptions);

      document.querySelectorAll(".car-card").forEach((card) => {
        card.style.animationPlayState = "paused";
        observer.observe(card);
      });
    </script>
  </body>
</html>
